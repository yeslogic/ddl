stdout = '''
let device_table = let u16_div_ceil = fun (numerator : U16) (denominator :
U16) => let quotient = numerator / denominator;
if (quotient * denominator) < numerator then quotient + (1 : U16) else quotient;
let delta_bits = fun (delta_format : U16) (num_sizes :
U16) => match delta_format {
    0x1 => num_sizes * (2 : U16),
    0x2 => num_sizes * (4 : U16),
    0x3 => num_sizes * (8 : U16),
    _ => 0,
};
let num_sizes = fun (start : U16) (end : U16) => end - start + (1 : U16);
{
    start_size <- u16be,
    end_size <- u16be,
    delta_format <- u16be,
    delta_values <- let delta_bits =
    delta_bits delta_format (num_sizes start_size end_size);
    repeat_len16 (u16_div_ceil delta_bits 16) u16be,
};
() : ()
'''
stderr = ''
