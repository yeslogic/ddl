stdout = '''
let _ : _ = Void;
let _ : _ = U8;
let _ : _ = U16;
let _ : _ = U32;
let _ : _ = U64;
let _ : _ = S8;
let _ : _ = S16;
let _ : _ = S32;
let _ : _ = S64;
let _ : _ = F32;
let _ : _ = F64;
let _ : _ = Array8;
let _ : _ = Array16;
let _ : _ = Array32;
let _ : _ = Array64;
let _ : _ = Pos;
let _ : _ = Ref;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = 1;
let _ : _ = Format;
let _ : _ = succeed;
let _ : _ = fail;
let _ : _ = u8;
let _ : _ = u16be;
let _ : _ = u16le;
let _ : _ = u32be;
let _ : _ = u32le;
let _ : _ = u64be;
let _ : _ = u64le;
let _ : _ = s8;
let _ : _ = s16be;
let _ : _ = s16le;
let _ : _ = s32be;
let _ : _ = s32le;
let _ : _ = s64be;
let _ : _ = s64le;
let _ : _ = f32be;
let _ : _ = f32le;
let _ : _ = f64be;
let _ : _ = f64le;
let _ : _ = array8;
let _ : _ = array16;
let _ : _ = array32;
let _ : _ = array64;
let _ : _ = stream_pos;
let _ : _ = deref;
let _ : _ = link;
let _ : _ = Repr;
let _ : _ = u8_add;
let _ : _ = u8_sub;
let _ : _ = u8_mul;
let _ : _ = u8_div;
let _ : _ = u8_not;
let _ : _ = u8_shl;
let _ : _ = u8_shr;
let _ : _ = u8_and;
let _ : _ = u8_or;
let _ : _ = u8_xor;
let _ : _ = u16_add;
let _ : _ = u16_sub;
let _ : _ = u16_mul;
let _ : _ = u16_div;
let _ : _ = u16_not;
let _ : _ = u16_shl;
let _ : _ = u16_shr;
let _ : _ = u16_and;
let _ : _ = u16_or;
let _ : _ = u16_xor;
let _ : _ = u32_add;
let _ : _ = u32_sub;
let _ : _ = u32_mul;
let _ : _ = u32_div;
let _ : _ = u32_not;
let _ : _ = u32_shl;
let _ : _ = u32_shr;
let _ : _ = u32_and;
let _ : _ = u32_or;
let _ : _ = u32_xor;
let _ : _ = u64_add;
let _ : _ = u64_sub;
let _ : _ = u64_mul;
let _ : _ = u64_div;
let _ : _ = u64_not;
let _ : _ = u64_shl;
let _ : _ = u64_shr;
let _ : _ = u64_and;
let _ : _ = u64_or;
let _ : _ = u64_xor;
let _ : _ = s8_neg;
let _ : _ = s8_add;
let _ : _ = s8_sub;
let _ : _ = s8_mul;
let _ : _ = s8_div;
let _ : _ = s16_neg;
let _ : _ = s16_add;
let _ : _ = s16_sub;
let _ : _ = s16_mul;
let _ : _ = s16_div;
let _ : _ = s32_neg;
let _ : _ = s32_add;
let _ : _ = s32_sub;
let _ : _ = s32_mul;
let _ : _ = s32_div;
let _ : _ = s64_neg;
let _ : _ = s64_add;
let _ : _ = s64_sub;
let _ : _ = s64_mul;
let _ : _ = s64_div;
let _ : _ = pos_add_u8;
let _ : _ = pos_add_u16;
let _ : _ = pos_add_u32;
let _ : _ = pos_add_u64;
Type : Type
'''
stderr = ''
