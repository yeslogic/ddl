stdout = '''
let id = fun (@A : Type) (a : A) => a;
let always = fun (@A : Type) (@B : Type) (a : A) (b : B) => a;
let apply = fun (@A : Type) (@B : Type) (f : A -> B) (x : A) => f x;
let _ = id;
let _ = always;
let _ = apply;
let _ = id @Bool;
let _ = always @Bool @U32;
let _ = apply @Bool @U32;
let _ = apply @U32 @Bool (always @Bool @U32 false) 0;
() : ()
'''
stderr = ''
