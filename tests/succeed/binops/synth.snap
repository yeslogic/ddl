stdout = '''
let _ : U8 = (1 : U8) + (1 : U8);
let _ : U16 = (1 : U16) + (1 : U16);
let _ : U32 = (1 : U32) + (1 : U32);
let _ : U64 = (1 : U64) + (1 : U64);
let _ : S8 = (1 : S8) + (1 : S8);
let _ : S16 = (1 : S16) + (1 : S16);
let _ : S32 = (1 : S32) + (1 : S32);
let _ : S64 = (1 : S64) + (1 : S64);
let _ : U8 = (1 : U8) - (1 : U8);
let _ : U16 = (1 : U16) - (1 : U16);
let _ : U32 = (1 : U32) - (1 : U32);
let _ : U64 = (1 : U64) - (1 : U64);
let _ : S8 = (1 : S8) - (1 : S8);
let _ : S16 = (1 : S16) - (1 : S16);
let _ : S32 = (1 : S32) - (1 : S32);
let _ : S64 = (1 : S64) - (1 : S64);
let _ : U8 = (1 : U8) * (1 : U8);
let _ : U16 = (1 : U16) * (1 : U16);
let _ : U32 = (1 : U32) * (1 : U32);
let _ : U64 = (1 : U64) * (1 : U64);
let _ : S8 = (1 : S8) * (1 : S8);
let _ : S16 = (1 : S16) * (1 : S16);
let _ : S32 = (1 : S32) * (1 : S32);
let _ : S64 = (1 : S64) * (1 : S64);
let _ : U8 = (1 : U8) / (1 : U8);
let _ : U16 = (1 : U16) / (1 : U16);
let _ : U32 = (1 : U32) / (1 : U32);
let _ : U64 = (1 : U64) / (1 : U64);
let _ : S8 = (1 : S8) / (1 : S8);
let _ : S16 = (1 : S16) / (1 : S16);
let _ : S32 = (1 : S32) / (1 : S32);
let _ : S64 = (1 : S64) / (1 : S64);
let _ : Bool = true == true;
let _ : Bool = true != true;
let _ : Bool = (1 : U8) == (1 : U8);
let _ : Bool = (1 : U16) == (1 : U16);
let _ : Bool = (1 : U32) == (1 : U32);
let _ : Bool = (1 : U64) == (1 : U64);
let _ : Bool = (1 : S8) == (1 : S8);
let _ : Bool = (1 : S16) == (1 : S16);
let _ : Bool = (1 : S32) == (1 : S32);
let _ : Bool = (1 : S64) == (1 : S64);
let _ : Bool = (1 : U8) != (1 : U8);
let _ : Bool = (1 : U16) != (1 : U16);
let _ : Bool = (1 : U32) != (1 : U32);
let _ : Bool = (1 : U64) != (1 : U64);
let _ : Bool = (1 : S8) != (1 : S8);
let _ : Bool = (1 : S16) != (1 : S16);
let _ : Bool = (1 : S32) != (1 : S32);
let _ : Bool = (1 : S64) != (1 : S64);
let _ : Bool = (1 : U8) > (1 : U8);
let _ : Bool = (1 : U16) > (1 : U16);
let _ : Bool = (1 : U32) > (1 : U32);
let _ : Bool = (1 : U64) > (1 : U64);
let _ : Bool = (1 : S8) > (1 : S8);
let _ : Bool = (1 : S16) > (1 : S16);
let _ : Bool = (1 : S32) > (1 : S32);
let _ : Bool = (1 : S64) > (1 : S64);
let _ : Bool = (1 : U8) >= (1 : U8);
let _ : Bool = (1 : U16) >= (1 : U16);
let _ : Bool = (1 : U32) >= (1 : U32);
let _ : Bool = (1 : U64) >= (1 : U64);
let _ : Bool = (1 : S8) >= (1 : S8);
let _ : Bool = (1 : S16) >= (1 : S16);
let _ : Bool = (1 : S32) >= (1 : S32);
let _ : Bool = (1 : S64) >= (1 : S64);
let _ : Bool = (1 : U8) < (1 : U8);
let _ : Bool = (1 : U16) < (1 : U16);
let _ : Bool = (1 : U32) < (1 : U32);
let _ : Bool = (1 : U64) < (1 : U64);
let _ : Bool = (1 : S8) < (1 : S8);
let _ : Bool = (1 : S16) < (1 : S16);
let _ : Bool = (1 : S32) < (1 : S32);
let _ : Bool = (1 : S64) < (1 : S64);
let _ : Bool = (1 : U8) <= (1 : U8);
let _ : Bool = (1 : U16) <= (1 : U16);
let _ : Bool = (1 : U32) <= (1 : U32);
let _ : Bool = (1 : U64) <= (1 : U64);
let _ : Bool = (1 : S8) <= (1 : S8);
let _ : Bool = (1 : S16) <= (1 : S16);
let _ : Bool = (1 : S32) <= (1 : S32);
let _ : Bool = (1 : S64) <= (1 : S64);
let _ : Pos -> Pos = fun x => x + (1 : U8);
let _ : Pos -> Pos = fun x => x + (1 : U16);
let _ : Pos -> Pos = fun x => x + (1 : U32);
let _ : Pos -> Pos = fun x => x + (1 : U64);
() : ()
'''
stderr = ''
